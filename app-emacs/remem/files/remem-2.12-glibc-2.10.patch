--- remem-orig/savutil/gbuf.c	2007-04-23 08:22:14.000000000 +0200
+++ remem/savutil/gbuf.c	2009-06-09 19:56:07.000000000 +0200
@@ -40,7 +40,7 @@
 
 /* Return the minimum of n and strlen(n).  This won't read beyond n characters of string s,
    so if s isn't null terminated it won't matter so long as it's malloc'ed up to n. */
-size_t strnlen (char *s, size_t n)
+size_t gbuf_strnlen (char *s, size_t n)
 {
   int i;
   if (s == NULL) return(0);
@@ -84,7 +84,7 @@
 /* Like strncat, but for growbuffers */
 void strncat_GBuffer(GBuffer *dest, char *src, size_t n)
 {
-  if (n > strnlen(src,n)) n=strnlen(src,n);
+  if (n > gbuf_strnlen(src,n)) n=gbuf_strnlen(src,n);
   if ((dest->tail + n + 1) > dest->size) {
     dest->size = 2 * (RA_MAX(dest->size, (n + dest->tail + 1)));
     dest->value = realloc(dest->value, dest->size);
@@ -98,7 +98,7 @@
 /* Like strncpy, but for GBuffers, except that it will always null terminate. */
 void strncpy_GBuffer(GBuffer *dest, char *src, size_t n)
 {
-  if (n > strnlen(src,n)) n=strnlen(src,n);
+  if (n > gbuf_strnlen(src,n)) n=gbuf_strnlen(src,n);
   if (n > dest->size) {
     dest->size = 2 * (RA_MAX(dest->size, n));
     dest->value = realloc(dest->value, dest->size);
